{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Kyle\\\\react-bootcamp\\\\reminderpro\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Kyle\\\\react-bootcamp\\\\reminderpro\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Kyle\\\\react-bootcamp\\\\reminderpro\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Kyle\\\\react-bootcamp\\\\reminderpro\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Kyle\\\\react-bootcamp\\\\reminderpro\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Kyle\\\\react-bootcamp\\\\reminderpro\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { addReminder } from '../actions';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.addReminder = function () {\n      _this.props.addReminder(_this.state.text);\n    };\n\n    _this.renderReminders = function () {\n      var reminders = _this.props.reminders;\n    };\n\n    _this.state = {\n      text: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Reminder Pro\"), React.createElement(\"div\", {\n        className: \"form-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"form-control\",\n        placeholder: \"I have to...\",\n        onChange: function onChange(event) {\n          _this2.setState({\n            text: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })), this.renderReminders(), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-success\",\n        onClick: this.addReminder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Add Button\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    reminders: state\n  };\n}\n\nfunction mapDispatchToProps(disptch) {\n  return bindActionCreators({\n    addReminder: addReminder\n  }, disptch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:\\Users\\Kyle\\react-bootcamp\\reminderpro\\src\\components\\App.jsx"],"names":["React","Component","connect","bindActionCreators","addReminder","App","props","state","text","renderReminders","reminders","event","setState","target","value","mapStateToProps","mapDispatchToProps","disptch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,YAA5B;;IAEMC,G;;;;;AACF,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;;AADe,UAOnBF,WAPmB,GAOL,YAAM;AAChB,YAAKE,KAAL,CAAWF,WAAX,CAAuB,MAAKG,KAAL,CAAWC,IAAlC;AACH,KATkB;;AAAA,UAWnBC,eAXmB,GAWD,YAAM;AAAA,UACZC,SADY,GACE,MAAKJ,KADP,CACZI,SADY;AAEvB,KAbkB;;AAEf,UAAKH,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAFe;AAKlB;;;;6BAUQ;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAII;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,WAAW,EAAC,cAFd;AAGE,QAAA,QAAQ,EAAE,kBAAAG,KAAK,EAAI;AAAC,UAAA,MAAI,CAACC,QAAL,CAAc;AAACJ,YAAAA,IAAI,EAACG,KAAK,CAACE,MAAN,CAAaC;AAAnB,WAAd;AAAyC,SAH/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAQK,KAAKL,eAAL,EARL,EASI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAkD,QAAA,OAAO,EAAE,KAAKL,WAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ,CAJJ,CADJ;AAoBH;;;;EArCaH,S;;AAwClB,SAASc,eAAT,CAAyBR,KAAzB,EAAgC;AAC5B,SAAO;AACHG,IAAAA,SAAS,EAAEH;AADR,GAAP;AAGH;;AAED,SAASS,kBAAT,CAA4BC,OAA5B,EAAqC;AACjC,SAAOd,kBAAkB,CAAC;AAACC,IAAAA,WAAW,EAAXA;AAAD,GAAD,EAAea,OAAf,CAAzB;AACH;;AAED,eAAef,OAAO,CAACa,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CX,GAA5C,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { addReminder } from '../actions';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        }\r\n    }\r\n\r\n    addReminder = () => {\r\n        this.props.addReminder(this.state.text);\r\n    }\r\n\r\n    renderReminders = () => {\r\n        const { reminders } = this.props;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='App'>\r\n                <div className='title'>\r\n                    Reminder Pro\r\n                </div>\r\n                <div className='form-inline'>\r\n                    <div className='form-group'>\r\n                        <input \r\n                          className='form-control'\r\n                          placeholder='I have to...'\r\n                          onChange={event => {this.setState({text:event.target.value})}}\r\n                          />\r\n                    </div>\r\n                    {this.renderReminders()}        \r\n                    <button type='button' className='btn btn-success' onClick={this.addReminder}>\r\n                        Add Button\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        reminders: state\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(disptch) {\r\n    return bindActionCreators({addReminder},disptch);\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\r\n\r\n"]},"metadata":{},"sourceType":"module"}